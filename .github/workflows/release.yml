name: Build and Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/kube-vip-controller
  PROJECT_NAME: kube-vip-controller

jobs:
  build:
    name: Build Go binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # goos: [linux, darwin, windows]
        # goarch: [amd64, arm64]
        goos: [linux]
        goarch: [amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'  # Set your Go version

      - name: Build binary
        run: |
          OUTPUT_NAME=$PROJECT_NAME
          if [ "${{ matrix.goos }}" = "windows" ]; then
            OUTPUT_NAME="${OUTPUT_NAME}.exe"
          fi
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/${OUTPUT_NAME} ./...

      - name: List files
        run: ls -l dist

      - name: Upload binaries as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  container:
    name: Build & Push container Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract tag
      id: extract_tag
      run: echo "TAG=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"

    - name: Build and push image
      run: |
        docker build -t $IMAGE_NAME:$TAG .
        docker image tag $IMAGE_NAME:$TAG $IMAGE_NAME:latest
        docker push $IMAGE_NAME:$TAG
        docker push $IMAGE_NAME:latest